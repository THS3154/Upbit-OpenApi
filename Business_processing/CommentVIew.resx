<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <assembly alias="System.Drawing" name="System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="$this.Icon" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        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
        AAAASUVORK5CYII=
</value>
  </data>
</root>